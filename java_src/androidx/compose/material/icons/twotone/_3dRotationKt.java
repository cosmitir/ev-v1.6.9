package androidx.compose.material.icons.twotone;

import androidx.compose.material.icons.Icons;
import androidx.compose.ui.graphics.Color;
import androidx.compose.ui.graphics.SolidColor;
import androidx.compose.ui.graphics.StrokeCap;
import androidx.compose.ui.graphics.StrokeJoin;
import androidx.compose.ui.graphics.vector.ImageVector;
import androidx.compose.ui.graphics.vector.PathBuilder;
import androidx.compose.ui.graphics.vector.VectorKt;
import androidx.compose.ui.unit.Dp;
import kotlin.Metadata;
import kotlin.jvm.internal.Intrinsics;
/* compiled from: _3dRotation.kt */
@Metadata(d1 = {"\u0000\u0010\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0003\"\u0010\u0010\u0000\u001a\u0004\u0018\u00010\u0001X\u0082\u000e¢\u0006\u0002\n\u0000\"\u0015\u0010\u0002\u001a\u00020\u0001*\u00020\u00038F¢\u0006\u0006\u001a\u0004\b\u0004\u0010\u0005¨\u0006\u0006"}, d2 = {"__3dRotation", "Landroidx/compose/ui/graphics/vector/ImageVector;", "_3dRotation", "Landroidx/compose/material/icons/Icons$TwoTone;", "get_3dRotation", "(Landroidx/compose/material/icons/Icons$TwoTone;)Landroidx/compose/ui/graphics/vector/ImageVector;", "material-icons-extended-twotone_release"}, k = 2, mv = {1, 6, 0}, xi = 48)
/* loaded from: classes.dex */
public final class _3dRotationKt {
    private static ImageVector __3dRotation;

    public static final ImageVector get_3dRotation(Icons.TwoTone twoTone) {
        ImageVector.Builder m815addPathoIyEayM;
        Intrinsics.checkNotNullParameter(twoTone, "<this>");
        ImageVector imageVector = __3dRotation;
        if (imageVector != null) {
            Intrinsics.checkNotNull(imageVector);
            return imageVector;
        }
        ImageVector.Builder builder = new ImageVector.Builder("TwoTone._3dRotation", Dp.m2105constructorimpl(24.0f), Dp.m2105constructorimpl(24.0f), 24.0f, 24.0f, 0L, 0, 96, null);
        int defaultFillType = VectorKt.getDefaultFillType();
        SolidColor solidColor = new SolidColor(Color.Companion.m372getBlack0d7_KjU(), null);
        int m616getButtKaPHkGw = StrokeCap.Companion.m616getButtKaPHkGw();
        int m626getBevelLxFBmk8 = StrokeJoin.Companion.m626getBevelLxFBmk8();
        PathBuilder pathBuilder = new PathBuilder();
        pathBuilder.moveTo(7.53f, 21.48f);
        pathBuilder.curveTo(4.26f, 19.94f, 1.92f, 16.76f, 1.56f, 13.0f);
        pathBuilder.lineTo(0.06f, 13.0f);
        pathBuilder.curveToRelative(0.51f, 6.16f, 5.66f, 11.0f, 11.95f, 11.0f);
        pathBuilder.lineToRelative(0.66f, -0.03f);
        pathBuilder.lineToRelative(-3.81f, -3.81f);
        pathBuilder.lineToRelative(-1.33f, 1.32f);
        pathBuilder.close();
        pathBuilder.moveTo(8.42f, 14.96f);
        pathBuilder.curveToRelative(-0.19f, 0.0f, -0.37f, -0.03f, -0.52f, -0.08f);
        pathBuilder.curveToRelative(-0.16f, -0.06f, -0.29f, -0.13f, -0.4f, -0.24f);
        pathBuilder.curveToRelative(-0.11f, -0.1f, -0.2f, -0.22f, -0.26f, -0.37f);
        pathBuilder.curveToRelative(-0.06f, -0.14f, -0.09f, -0.3f, -0.09f, -0.47f);
        pathBuilder.horizontalLineToRelative(-1.3f);
        pathBuilder.curveToRelative(0.0f, 0.36f, 0.07f, 0.68f, 0.21f, 0.95f);
        pathBuilder.curveToRelative(0.14f, 0.27f, 0.33f, 0.5f, 0.56f, 0.69f);
        pathBuilder.curveToRelative(0.24f, 0.18f, 0.51f, 0.32f, 0.82f, 0.41f);
        pathBuilder.curveToRelative(0.3f, 0.1f, 0.62f, 0.15f, 0.96f, 0.15f);
        pathBuilder.curveToRelative(0.37f, 0.0f, 0.72f, -0.05f, 1.03f, -0.15f);
        pathBuilder.curveToRelative(0.32f, -0.1f, 0.6f, -0.25f, 0.83f, -0.44f);
        pathBuilder.reflectiveCurveToRelative(0.42f, -0.43f, 0.55f, -0.72f);
        pathBuilder.reflectiveCurveToRelative(0.2f, -0.61f, 0.2f, -0.97f);
        pathBuilder.curveToRelative(0.0f, -0.19f, -0.02f, -0.38f, -0.07f, -0.56f);
        pathBuilder.curveToRelative(-0.05f, -0.18f, -0.12f, -0.35f, -0.23f, -0.51f);
        pathBuilder.curveToRelative(-0.1f, -0.16f, -0.24f, -0.3f, -0.4f, -0.43f);
        pathBuilder.curveToRelative(-0.17f, -0.13f, -0.37f, -0.23f, -0.61f, -0.31f);
        pathBuilder.curveToRelative(0.2f, -0.09f, 0.37f, -0.2f, 0.52f, -0.33f);
        pathBuilder.curveToRelative(0.15f, -0.13f, 0.27f, -0.27f, 0.37f, -0.42f);
        pathBuilder.curveToRelative(0.1f, -0.15f, 0.17f, -0.3f, 0.22f, -0.46f);
        pathBuilder.reflectiveCurveToRelative(0.07f, -0.32f, 0.07f, -0.48f);
        pathBuilder.curveToRelative(0.0f, -0.36f, -0.06f, -0.68f, -0.18f, -0.96f);
        pathBuilder.reflectiveCurveToRelative(-0.29f, -0.51f, -0.51f, -0.69f);
        pathBuilder.curveToRelative(-0.2f, -0.19f, -0.47f, -0.33f, -0.77f, -0.43f);
        pathBuilder.curveTo(9.11f, 8.05f, 8.77f, 8.0f, 8.4f, 8.0f);
        pathBuilder.curveToRelative(-0.36f, 0.0f, -0.69f, 0.05f, -1.0f, 0.16f);
        pathBuilder.curveToRelative(-0.3f, 0.11f, -0.57f, 0.26f, -0.79f, 0.45f);
        pathBuilder.curveToRelative(-0.21f, 0.19f, -0.38f, 0.41f, -0.51f, 0.67f);
        pathBuilder.curveToRelative(-0.12f, 0.26f, -0.18f, 0.54f, -0.18f, 0.85f);
        pathBuilder.horizontalLineToRelative(1.3f);
        pathBuilder.curveToRelative(0.0f, -0.17f, 0.03f, -0.32f, 0.09f, -0.45f);
        pathBuilder.reflectiveCurveToRelative(0.14f, -0.25f, 0.25f, -0.34f);
        pathBuilder.reflectiveCurveToRelative(0.23f, -0.17f, 0.38f, -0.22f);
        pathBuilder.reflectiveCurveToRelative(0.3f, -0.08f, 0.48f, -0.08f);
        pathBuilder.curveToRelative(0.4f, 0.0f, 0.7f, 0.1f, 0.89f, 0.31f);
        pathBuilder.curveToRelative(0.19f, 0.2f, 0.29f, 0.49f, 0.29f, 0.86f);
        pathBuilder.curveToRelative(0.0f, 0.18f, -0.03f, 0.34f, -0.08f, 0.49f);
        pathBuilder.reflectiveCurveToRelative(-0.14f, 0.27f, -0.25f, 0.37f);
        pathBuilder.curveToRelative(-0.11f, 0.1f, -0.25f, 0.18f, -0.41f, 0.24f);
        pathBuilder.curveToRelative(-0.16f, 0.06f, -0.36f, 0.09f, -0.58f, 0.09f);
        pathBuilder.horizontalLineToRelative(-0.77f);
        pathBuilder.verticalLineToRelative(1.03f);
        pathBuilder.horizontalLineToRelative(0.77f);
        pathBuilder.curveToRelative(0.22f, 0.0f, 0.42f, 0.02f, 0.6f, 0.07f);
        pathBuilder.reflectiveCurveToRelative(0.33f, 0.13f, 0.45f, 0.23f);
        pathBuilder.curveToRelative(0.12f, 0.11f, 0.22f, 0.24f, 0.29f, 0.4f);
        pathBuilder.reflectiveCurveToRelative(0.1f, 0.35f, 0.1f, 0.57f);
        pathBuilder.curveToRelative(0.0f, 0.41f, -0.12f, 0.72f, -0.35f, 0.93f);
        pathBuilder.curveToRelative(-0.23f, 0.23f, -0.55f, 0.33f, -0.95f, 0.33f);
        pathBuilder.close();
        pathBuilder.moveTo(16.97f, 9.04f);
        pathBuilder.curveToRelative(-0.32f, -0.33f, -0.7f, -0.59f, -1.14f, -0.77f);
        pathBuilder.curveToRelative(-0.44f, -0.18f, -0.93f, -0.27f, -1.47f, -0.27f);
        pathBuilder.lineTo(12.0f, 8.0f);
        pathBuilder.verticalLineToRelative(8.0f);
        pathBuilder.horizontalLineToRelative(2.3f);
        pathBuilder.curveToRelative(0.55f, 0.0f, 1.06f, -0.09f, 1.51f, -0.27f);
        pathBuilder.reflectiveCurveToRelative(0.84f, -0.43f, 1.16f, -0.76f);
        pathBuilder.curveToRelative(0.32f, -0.33f, 0.57f, -0.73f, 0.74f, -1.19f);
        pathBuilder.curveToRelative(0.17f, -0.47f, 0.26f, -0.99f, 0.26f, -1.57f);
        pathBuilder.verticalLineToRelative(-0.4f);
        pathBuilder.curveToRelative(0.0f, -0.58f, -0.09f, -1.1f, -0.26f, -1.57f);
        pathBuilder.reflectiveCurveToRelative(-0.42f, -0.87f, -0.74f, -1.2f);
        pathBuilder.close();
        pathBuilder.moveTo(16.58f, 12.2f);
        pathBuilder.curveToRelative(0.0f, 0.42f, -0.05f, 0.79f, -0.14f, 1.13f);
        pathBuilder.curveToRelative(-0.1f, 0.33f, -0.24f, 0.62f, -0.43f, 0.85f);
        pathBuilder.curveToRelative(-0.19f, 0.23f, -0.43f, 0.41f, -0.71f, 0.53f);
        pathBuilder.curveToRelative(-0.29f, 0.12f, -0.62f, 0.18f, -0.99f, 0.18f);
        pathBuilder.horizontalLineToRelative(-0.91f);
        pathBuilder.lineTo(13.4f, 9.12f);
        pathBuilder.horizontalLineToRelative(0.97f);
        pathBuilder.curveToRelative(0.72f, 0.0f, 1.27f, 0.23f, 1.64f, 0.69f);
        pathBuilder.curveToRelative(0.38f, 0.46f, 0.57f, 1.12f, 0.57f, 1.99f);
        pathBuilder.verticalLineToRelative(0.4f);
        pathBuilder.close();
        pathBuilder.moveTo(12.01f, 0.0f);
        pathBuilder.lineToRelative(-0.66f, 0.03f);
        pathBuilder.lineToRelative(3.81f, 3.81f);
        pathBuilder.lineToRelative(1.33f, -1.33f);
        pathBuilder.curveToRelative(3.27f, 1.55f, 5.61f, 4.72f, 5.96f, 8.48f);
        pathBuilder.horizontalLineToRelative(1.5f);
        pathBuilder.curveTo(23.45f, 4.84f, 18.3f, 0.0f, 12.01f, 0.0f);
        pathBuilder.close();
        m815addPathoIyEayM = builder.m815addPathoIyEayM(pathBuilder.getNodes(), (r30 & 2) != 0 ? VectorKt.getDefaultFillType() : defaultFillType, (r30 & 4) != 0 ? "" : "", (r30 & 8) != 0 ? null : solidColor, (r30 & 16) != 0 ? 1.0f : 1.0f, (r30 & 32) == 0 ? null : null, (r30 & 64) != 0 ? 1.0f : 1.0f, (r30 & 128) != 0 ? 0.0f : 1.0f, (r30 & 256) != 0 ? VectorKt.getDefaultStrokeLineCap() : m616getButtKaPHkGw, (r30 & 512) != 0 ? VectorKt.getDefaultStrokeLineJoin() : m626getBevelLxFBmk8, (r30 & 1024) != 0 ? 4.0f : 1.0f, (r30 & 2048) != 0 ? 0.0f : 0.0f, (r30 & 4096) == 0 ? 0.0f : 1.0f, (r30 & 8192) == 0 ? 0.0f : 0.0f);
        ImageVector build = m815addPathoIyEayM.build();
        __3dRotation = build;
        Intrinsics.checkNotNull(build);
        return build;
    }
}
